package ${package.Controller};

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import com.yonyou.prm.common.annotation.SystemLogAnnotation;
import com.yonyou.prm.core.AbstractController;
import com.yonyou.prm.core.Result;
import com.yonyou.prm.core.ResultGenerator;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import java.util.Arrays;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@RestController
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} service;

    @SystemLogAnnotation("新增$!{table.comment}信息")
    @RequiresPermissions("${entity}:add")
    @PostMapping("/add")
    public Result create(@RequestBody ${entity} t){
            if(service.insert(t)){
            return ResultGenerator.genSuccessResult();
            }else{
            return ResultGenerator.genFailResult("新增失败");
            }
            }

    @SystemLogAnnotation("批量删除$!{table.comment}信息")
    @RequiresPermissions("${entity}:removeAll")
    @PostMapping("/remove")
    public Result delete(@RequestBody String[]ids){
            if(service.deleteBatchIds(Arrays.asList(ids))){
            return ResultGenerator.genSuccessResult();
            }else{
            return ResultGenerator.genFailResult("批量删除失败");
            }
    }

    @SystemLogAnnotation("删除$!{table.comment}信息")
    @RequiresPermissions("${entity}:remove")
    @PostMapping("/remove/{id}")
    public Result delete(@PathVariable String id){
            if(service.deleteById(id)){
            return ResultGenerator.genSuccessResult();
            }else{
            return ResultGenerator.genFailResult("删除失败");
            }
     }

    @SystemLogAnnotation("修改$!{table.comment}信息")
    @RequiresPermissions("${entity}:update")
    @PostMapping("/update")
    public Result update(@RequestBody ${entity} t){
            if(service.updateById(t)){
            return ResultGenerator.genSuccessResult();
            }else{
            return ResultGenerator.genFailResult("更新失败");
            }
    }


    @RequiresPermissions("${entity}:detail")
    @PostMapping("/detail/{id}")
    public Result detail(@PathVariable String id){
            return ResultGenerator.genSuccessResult(service.selectById(id));
            }

    @RequiresPermissions("${entity}:list")
    @PostMapping("/list")
    public Result list(@RequestBody Page<${entity}> pageEntity){
            pageEntity=service.selectPage(pageEntity,new EntityWrapper<${entity}>());
            return ResultGenerator.genSuccessResult(pageEntity);
            }
    }
